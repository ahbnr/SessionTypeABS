plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
    id 'application'
    id 'antlr'
    id "com.github.johnrengelman.shadow" version "4.0.4"
}

group 'de.ahbnr'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.0')
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.5.0")
    testImplementation("org.assertj:assertj-core:3.12.0")

    //implementation project('abstools')
    implementation files('../abstools/frontend/dist/absfrontend.jar')

    implementation 'info.picocli:picocli:4.0.0-beta-2'

    // set antlr version
    antlr "org.antlr:antlr4:4.7"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions {
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

application {
    mainClassName = 'de.ahbnr.sessiontypeabs.cli.CLI'
}

jar {
    manifest {
        attributes 'Main-Class': 'de.ahbnr.sessiontypeabs.cli.CLI'
    }
}

shadowJar {
  minimize()
}

run {
    if (project.hasProperty('runArgs')) {
        args findProperty('runArgs')
    }
}

test {
    useJUnitPlatform()
    testLogging {
		events "passed", "skipped", "failed"
	}
}

// Make ANTLR generated sources available
sourceSets {
  main.java.srcDirs += "${project.buildDir}/generated-src/antlr/main"
}

generateGrammarSource {
  arguments += ["-visitor", "-package", "de.ahbnr.sessiontypeabs.antlr"]
  outputDirectory = file("${project.buildDir}/generated-src/antlr/main/de/ahbnr/sessiontypeabs/antlr")
}

compileKotlin.dependsOn generateGrammarSource